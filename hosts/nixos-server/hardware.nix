# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-intel" "i915" "video" "wl" "nvidia" "nvidia_modeset" "nvidia_uvm" "nvidia_drm" "applesmc"];
  boot.blacklistedKernelModules = [ "nouveau" ];
  boot.extraModulePackages = [config.boot.kernelPackages.broadcom_sta];
  boot.kernelParams = [
    "intel_idle.max_cstate=1"
    "processor.max_state=1"
    "intel_pstate=disable"
    "pcie_aspm=off"
    "acpi_osi=Linux"
    "acpi_backlight=native"
    "libata.force=noncq"
    "libata.noacpi=1"
    "ahci.mobile_lpm_policy=1"
    "nvidia-drm.modeset=0"
    "video=efifb:off"
    "i915.modeset=1"
    "i915.enable_rc6=0"
    "i915.enable_dpcd_backlight=1"
    "apple_gmux.force_igd=Y"           # Force Intel Graphics Device
  ];
  programs.light.enable = true;

  # NVIDIA hardware configuration
  hardware.nvidia = {
    modesetting.enable = false;
    package = config.boot.kernelPackages.nvidiaPackages.legacy_470;
    powerManagement.enable = true; # For laptops
  };

  services.xserver.videoDrivers = [ "nvidia" ];

  # Graphics support for compute/transcoding workloads
  hardware.graphics = {
    enable = true;
    enable32Bit = true;
  };

  # Optimize I/O for Apple SSD
  boot.kernel.sysctl = {
    "vm.dirty_ratio" = 15;
    "vm.dirty_background_ratio" = 5;
  };

  powerManagement.enable = true;
  powerManagement.cpuFreqGovernor = "schedutil";
  services.mbpfan = {
    enable = true;
    aggressive = true;
  };

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/2a7ee3c7-badc-45fc-b118-3085efff2a69";
    fsType = "ext4";
    options = ["noatime" "discard"];  # Reduce wear, enable TRIM
  };

  boot.initrd.luks.devices."nixosroot".device = "/dev/disk/by-uuid/7d8e632d-5b71-4983-bced-7c771f5e5c12";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/67E3-17ED";
    fsType = "vfat";
    options = ["fmask=0022" "dmask=0022" "noatime" "discard"];
  };

  fileSystems."/mnt/biggidrive" = {
    device = "/dev/disk/by-uuid/dbbf1ce5-ab00-4312-941c-8cff767e5e1d";
    fsType = "ext4";
    options = [ "nofail" "x-systemd.device-timeout=10" "noatime" "defaults" ];
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/144f9572-e967-4e0b-8443-92c9232c0cdf";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  # networking.useDHCP = lib.mkDefault true;
  networking.interfaces.eth0.useDHCP = lib.mkDefault true;
  networking.wireless.enable = false;
  networking.wireless.iwd.enable = true;

  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
